Sum of the Numbers in a String
#include<iostream>
using namespace std;
#include<bits/stdc++.h>
void x(string m){
    int total=0;
    // int b=0;
    // int c=0;
    // string mm;
    string l="";
    for(int i=0; i<m.length(); i++){
        
   
        if(m[i]>='0'&&m[i]<='9' ){
            l.push_back(m[i]);
            
        }
        else {
            if(!l.empty()){
                total+=stoi(l);
                l="";
            }
        
        }
    }
 
      if (!l.empty()) {  // Add the last number if it exists
        total += stoi(l);
    }
    cout<<total;
    
}
int main(){

    x("1xyz23");
    
}




Removing the duplicates:
a) string removeDuplicateLetters(string s) {          /////// IMP Concept
  string ans = "";
  vector < bool > map(26, false);
  for (int i = 0; i < s.length(); i++) {
    if (map[s[i] - 'a'] == false) {
      ans += s[i];
      map[s[i] - 'a'] = true;
    }
  }
  return ans;
}


b) void x(string m) {     ////////////////////////  VVVVIIMMPPP Concept
    string rel;
    int arr[256] = {0};     ///////  inclues all chars upper, lower, space, nums,  etc, etc....

    for (int i = 0; i < m.length(); i++) {
        arr[m[i]]++;  // Use ASCII value directly
    }

    for (int i = 0; i < 256; i++) {
        if (arr[i] >= 1) {
            rel.push_back(i);  // i is already ASCII character
        }
    }

    cout << rel;
}




///////  Words in string ///
void spaces(string s){
    int spaces=0;
    for(int i=0; i<s.length();i++){
        if(s[i]==' '){
            spaces++;
        }
    }
    cout<<spaces+1;



///////  Maximum Word  ////
void spaces(string s) {
    string curr = "", maxi = "";
    int maxLen = 0;

    for (int i = 0; i <= s.length(); i++) { // Use <= to process last word
        if (s[i] != ' ' && s[i] != '\0') {
            curr += s[i];
        } else {
            if (curr.length() > maxLen) {
                maxLen = curr.length();
                maxi = curr;
            }
            curr = ""; // Reset for next word
        }
    }

    cout << "Largest Word: " << maxi << endl;
}






//////////   reverse the words /////

void spaces(string s){
    reverse(s.begin(), s.end());
    int start=0;
    for(int i=0; i<=s.length(); i++){
        if(s[i]==' '||i==s.length()){////  going till '/n' to include the last char and if space then reverse the word
            reverse(s.begin()+start, s.begin()+i);
            start=i+1;
        }
    }
    for(int i=0; i<s.length(); i++){
        cout<<s[i];
    }
}




////////////////   digits to words    370 three hundred seventy  ///////
#include <iostream>
using namespace std;

string ones[] = {"", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"};
string teens[] = {"Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
string tens[] = {"", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};

string convertToWords(int num) {
    if (num == 0) return "Zero";
    
    string result = "";

    if (num / 100 > 0) {  // Handle Hundreds Place
        result += ones[num / 100] + " Hundred ";
        num %= 100;
    }

    if (num >= 10 && num <= 19) {  // Handle Teens (10-19)
        result += teens[num - 10];
    } else {  // Handle Tens and Ones (20-99)
        if (num / 10 > 1) {
            result += tens[num / 10] + " ";
            num %= 10;
        }
        if (num > 0) {
            result += ones[num];
        }
    }

    return result;
}

int main() {
    int num = 370;
    cout << convertToWords(num) << endl;  // Output: Three Hundred Seventy
}
